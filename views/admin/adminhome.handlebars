<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{{title}}</title>
  <link rel="stylesheet" href="/stylesheets/style.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.6.1/font/bootstrap-icons.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous" />
  <style>
    /* Add custom styles here */
    .card {
      text-align: center;
      background-color: rgba(63, 63, 63, 0.8);
    }

    .stock {
      color: rgb(255, 255, 255) !important;
    }

    #myChart {
      height: 260px !important;
      width: 100% !important;
    }


    body::after {
      content: "";
      background-image: url(/public/images/);
      background-color: rgb(71, 66, 66);
      background-size: cover;
      background-position: center;
      opacity: 1;
      /* Adjust the opacity value as per your preference */
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
    }
    

    .card {
      width: 150px;
      height: 120px;
      background-color: #4158D0;
      background-image: linear-gradient(43deg, #000000 0%, #818181 46%, #313030 100%);
      border-radius: 8px;
      color: rgb(255, 255, 255);
      overflow: hidden;
      position: relative;
      transform-style: preserve-3d;
      perspective: 1000px;
      transition: all 0.5s cubic-bezier(0.23, 1, 0.320, 1);
      cursor: pointer;
    }

    .card-content {
      padding: 20px;
      position: relative;
      z-index: 1;
      display: flex;
      flex-direction: column;
      gap: 10px;
      color: white;
      align-items: center;
      justify-content: center;
      text-align: center;
      height: 100%;
    }

    .card-content .card-title {
      font-size: 24px;
      font-weight: 700;
      color: inherit;
      text-transform: uppercase;
    }

    .card-content .card-para {
      color: inherit;
      opacity: 0.8;
      font-size: 14px;
    }

    .card:hover {
      transform: rotateY(10deg) rotateX(10deg) scale(1.05);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    }

    .card:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(transparent, rgba(0, 0, 0, 0.1));
      transition: transform 0.5s cubic-bezier(0.23, 1, 0.320, 1);
      z-index: 1;
    }

    .card:hover:before {
      transform: translateX(-100%);
    }

    .card:after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(transparent, rgba(0, 0, 0, 0.1));
      transition: transform 0.5s cubic-bezier(0.23, 1, 0.320, 1);
      z-index: 1;
    }

    .card:hover:after {
      transform: translateX(100%);
    }
  </style>


</head>

<body>
  {{> adminHeader}}
  <div style="height: 13vh;"></div>
  <div class="row d-flex col-md-12">
    {{>adminsidebar currentPage='dashboard'}}
    <div class="col-10">
      <div class="container mt-5">
        <div class="row justify-content-around mt-2 mb-5">
          <div class="col-md-2">
            <div class="card">
              <div class="card-body">
                <h6 class="card-title">Total<br> Sales</h6>
                <p class="card-text" style="font-size:x-large;color: rgb(255, 217, 0);">₹{{totalSales1}}</p>
              </div>
            </div>
          </div>
          
          <div class="col-md-2">
           
            <div class="card">
              <div class="card-body">
                <h6 class="card-title">Current Year Sales</h6>
                <p class="card-text" style="font-size:x-large;color: rgb(255, 217, 0);">₹{{currentyear.totalSales}}</p>
              </div>
            </div>
          </div>
          <div class="col-md-2">
            <div class="card">
              <div class="card-body">
                <h6 class="card-title">Previous Year Sales</h6>
                <p class="card-text" style="font-size:x-large;color: rgb(255, 217, 0);">₹{{previousYear.totalSales}}</p>
              </div>
            </div>
          </div>
          <div class="col-md-2">
            <div class="card">
              <div class="card-body">
                <h6 class="card-title">Registered Users</h6>
                <p class="card-text" style="font-size:x-large;color: rgb(255, 217, 0);"><span class="me-2">{{totaluser}}</span>Users</p>
              </div>
            </div>
          </div>
          <div class="col-md-2">
            <div class="card">
              <div class="card-body">
                <h6 class="card-title">Total<br> Stock</h6>
                <p class="card-text" style="font-size:x-large;color: rgb(255, 217, 0);">{{totalstock.totalStock}}</p>
              </div>
            </div>
          </div>
        </div>
        <input type="text" name="totalsales" id="" value="{{totalSales1}}" hidden>
        <input type="text" name="currentyearsales" id="" value="{{currentyear.totalSales}}" hidden>
        <input type="text" name="prevyearsales" id="" value="{{previousYear.totalSales}}" hidden>



        <div class="col-md-12 mt-4 d-flex">
          <div class="col-md-3 ms-3 me-5">
            <canvas id="myChart2"></canvas>
          </div>
          <div class='col-md-6 me-4 ms-5'>

            <canvas id="myChart"></canvas>
          </div>

        </div>
       
      </div>
      <div style="height: 8vh;"></div>
    </div>
  </div>
  {{> adminfooter}}
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>
  <script>
    const ctx = document.getElementById('myChart');
    const salesData = JSON.parse(decodeURIComponent('{{sales}}'));
    const sales = salesData.map(data => data.totalSales);
    console.log(sales)

    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        datasets: [{
          label: 'Sales History',
          data: sales,
          borderWidth: 1,
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              color: 'white', // Set the color of y-axis ticks to white
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)', // Set the color of y-axis grid lines to white with opacity
            },
          },
          x: {
            ticks: {
              color: 'white', // Set the color of x-axis ticks to white
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)', // Set the color of x-axis grid lines to white with opacity
            },
          },
        },
        plugins: {
          legend: {
            labels: {
              color: 'white', // Set the color of legend labels to white
            },
          },
        },
      },
    });


    const ctx1 = document.getElementById('myChart2');
    const paymentdata = JSON.parse(decodeURIComponent('{{payment}}'))
    const payment = paymentdata.map((data) => data.totalSales)
    const name = paymentdata.map((data) => data._id)
    console.log(name)
    const colors = ['rgba(2, 30, 74)', 'rgba(7, 171, 173)', 'rgba(194, 48, 94)']
    new Chart(ctx1, {
      type: 'pie', // Use a line chart to display sales history
      data: {
        labels: ['Cash', 'Onlinepayment', 'Wallet'],
        datasets: [{
          label: 'Method of Payment',
          data: payment,
          borderWidth: 1,
          backgroundColor: colors
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              color: 'white', // Set the color of y-axis ticks to white
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)', // Set the color of y-axis grid lines to white with opacity
            },
          },
          x: {
            ticks: {
              color: 'white', // Set the color of x-axis ticks to white
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)', // Set the color of x-axis grid lines to white with opacity
            },
          },
        },
        plugins: {
          legend: {
            labels: {
              color: 'white', // Set the color of legend labels to white
            },
          },
        },
      }
    });
  </script>
</body>

</html>